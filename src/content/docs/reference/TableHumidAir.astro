---
const humidAirData = [
  {
    abbr: 'RHO_PT_TEST',
    inputs: ['pressure, bara', 'Temperature, °C'],
    result: 'kg/m3',
    description: 'Get Air Density'
  },
  {
    abbr: 'H_TDRY_RH_P',
    inputs: ['Dry Temperature, °C', 'Rel. Humidity 0.0~1.0', 'Pressure, bara'],
    result: 'kJ/kg',
    description: 'Get Humid Air Enthalpy'
  },
  {
    abbr: 'HDRY_TDRY',
    inputs: ['Dry Temperature, °C'],
    result: 'kJ/kg',
    description: 'Get Dry Air Enthalpy'
  },
  {
    abbr: 'HUMR_TDRY_RH_P',
    inputs: ['Dry Temperature, °C', 'Rel. Humidity 0.0~1.0', 'Pressure, bara'],
    result: 'kg/kgDA',
    description: 'Get Humidity ratio'
  },
  {
    abbr: 'HUMR_H_TDRY',
    inputs: ['Moist Air Enthalpy, kJ/kg', 'Dry Temperature, °C'],
    result: 'kg/kgAir',
    description: 'Get Humidity ratio'
  },
  {
    abbr: 'HUMR_PVAP_P',
    inputs: ['Vapor Pressure, bara', 'Pressure, bara'],
    result: 'kg/kgAir',
    description: 'Get Humidity ratio'
  },
  {
    abbr: 'PSAT_TDRY',
    inputs: ['Dry Temperature, °C'],
    result: 'bara',
    description: 'Get Saturated (at 100% RH) Vapor Pressure'
  },
  {
    abbr: 'PVAP_TDEW',
    inputs: ['Dewpoint Temp, °C'],
    result: 'bara',
    description: 'Get Vapor Pressure'
  },
  {
    abbr: 'PVAP_TDRY_RH',
    inputs: ['Dry Temperature, °C', 'Rel. Humidity 0.0~1.0'],
    result: 'bara',
    description: 'Get Vapor Pressure'
  },
  {
    abbr: 'RHO_TDRY_RH_P',
    inputs: ['Dry Temperature, °C', 'Rel. Humidity 0.0~1.0', 'Pressure, bara'],
    result: 'kg/m3',
    description: 'Get Humid Air Density'
  },
  {
    abbr: 'RHO_TDRY_P',
    inputs: ['Dry Temperature, °C', 'Pressure, bara'],
    result: 'kg/m3',
    description: 'Get Dry Air Density'
  },
  {
    abbr: 'RH_TDRY_HUMR_P',
    inputs: ['Dry Temperature, °C', 'humRatio Humidity ratio, kg/kgAir', 'Pressure, bara'],
    result: 'decimal',
    description: 'Get Rel. Humidity'
  },
  {
    abbr: 'RH_TDRY_TWEB',
    inputs: ['Dry Temperature, °C', 'tWetBulb Wet Temp, °C', 'Pressure, bara'],
    result: 'decimal',
    description: 'Get Rel. Humidity'
  },
  {
    abbr: 'TDRY_TDEW_P',
    inputs: ['Dry Temperature, °C', 'DewPoint Temp, °C', 'Pressure, bara'],
    result: '°C',
    description: 'Get Wet Bulb Temp'
  },
  {
    abbr: 'TWEB_TDRY_RH_P',
    inputs: ['Dry Temperature, °C', 'Rel. Humidity 0.0~1.0', 'Pressure, bara'],
    result: '°C',
    description: 'Get Wet Bulb Temp'
  },
  {
    abbr: 'V_TDRY_P',
    inputs: ['Dry Temperature, °C', 'Pressure, bara'],
    result: 'm3/kg',
    description: 'Get Dry Air Volume'
  },
  {
    abbr: 'V_TDRY_RH_P',
    inputs: ['Dry Temperature, °C', 'Rel. Humidity 0.0~1.0', 'Pressure, bara'],
    result: 'm3/kg',
    description: 'Get Humid Air Volume'
  },
  {
    abbr: 'VIS_T',
    inputs: ['Dry Temperature, °C'],
    result: 'Pa-s',
    description: 'Get Typical Air Viscosity'
  }
];
---

<div class="humid-air-table">
  <table>
    <thead>
      <tr>
        <th>Abbr.</th>
        <th>INPUT Unit</th>
        <th>RESULT Unit</th>
        <th>Function Description</th>
      </tr>
    </thead>
    <tbody>
      {humidAirData.map((item) => (
        <tr>
          <td class="abbr">{item.abbr}</td>
          <td class="inputs">
            {item.inputs.map((input, index) => (
              <>
                {input}
                {index < item.inputs.length - 1 && <br />}
              </>
            ))}
          </td>
          <td class="result">{item.result}</td>
          <td class="description">{item.description}</td>
        </tr>
      ))}
    </tbody>
  </table>
</div>

<style>
  .humid-air-table {
    width: 100%;
    overflow-x: auto;
    margin: 1rem 0;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    font-size: 0.9rem;
  }

  th, td {
    padding: 0.75rem;
    text-align: left;
    border: 1px solid var(--sl-color-gray-5);
  }

  th {
    background-color: var(--sl-color-gray-6);
    font-weight: 600;
  }

  tr:nth-child(even) {
    background-color: var(--sl-color-gray-1);
  }

  .abbr {
    /* font-family: monospace; */
    white-space: nowrap;
  }

  .inputs {
    min-width: 200px;
  }

  .result {
    white-space: nowrap;
  }

  .description {
    min-width: 200px;
  }

  @media (max-width: 768px) {
    table {
      font-size: 0.8rem;
    }

    th, td {
      padding: 0.5rem;
    }
  }
</style>
